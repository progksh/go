package main

import (
	"fmt"
	"os"
)

func main() {
	/*
		range는 루프의 각 반복에서 값의 쌍을 생성한다. 즉, 인덱스와 그 인덱스에 있는 원소의 값이다.
		이 예제에서는 인덱스가 필요하지 않지만 range문의 문법상 인덱스 처리가 필요하기 때문에 인덱스도 처리해야 한다.
		처리 방법 중 하나는 인덱스를 temp와 같이 명백한 임시 변수에 할당하고 그 값을 무시하는 것이지만
		Go는 사용되지 않는 지역 변수를 허용하지 않기 때문에 이 경우 컴파일 오류가 발생할 것이다.
		해결책은 _로 표기되는 빈 식별자를 사용하는 것이다. 빈 식별자는 문법상 변수명이 필요하지만 프로그램 로직에서는 필요치 않은 경우 사용할 수 있으며
		예를 들어 원소 값만 필요할 때 원치않는 루프 인덱스를 제거하기 위해 쓰인다.
		os.Args의 인덱스는 묵시적이므로 대부분의 Go개발자는 앞에서와 같이 range와 _를 사용해 echo 프로그램을 더 명확하게 작성할 것이다.

		문자열 선언 방법
		s := ""
		var s string
		var s = ""
		var s string = ""
	*/
	s, sep := "", ""
	for _, args := range os.Args[0:] {
		s += sep + args
		sep = " "
	}
	fmt.Println(s)
}
